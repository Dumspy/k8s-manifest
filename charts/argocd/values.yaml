argo-cd:
  server:
    service:
      type: NodePort 
  notifications:
    enabled: true
    secret:
      create: false # using 1Password operator instead
    cm:
      create: true
    notifiers:
      service.slack: |
        token: $slack-token
        icon: https://argo-cd.readthedocs.io/en/stable/assets/logo.png
        channels: ["deployments"]
    templates:
      template.app-created: |
        message: |
          :new: Application *{{.app.metadata.name}}* has been created in <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|ArgoCD>.
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
          Repo: {{.app.spec.source.repoURL}}
          Revision: {{.app.status.sync.revision}}
        slack:
          channel: deployments
      template.app-deleted: |
        message: |
          :wastebasket: Application *{{.app.metadata.name}}* has been deleted from <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|ArgoCD>.
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
        slack:
          channel: deployments
      template.app-deployed: |
        message: |
          :rocket: Application *{{.app.metadata.name}}* has been deployed successfully.
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
          Revision: {{.app.status.sync.revision}}
          Commit Author: {{.app.status.sync.author}}
          <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|View in ArgoCD>
        slack:
          channel: deployments
      template.app-health-degraded: |
        message: |
          :warning: Application *{{.app.metadata.name}}* health has degraded!
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
          Health Status: {{.app.status.health.status}}
          Reason: {{.app.status.health.message}}
          <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|View in ArgoCD>
        slack:
          channel: deployments
      template.app-sync-failed: |
        message: |
          :x: Failed to sync application *{{.app.metadata.name}}*.
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
          Phase: {{.app.status.operationState.phase}}
          Message: {{.app.status.operationState.message}}
          <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|View in ArgoCD>
        slack:
          channel: deployments
      template.app-sync-running: |
        message: |
          :arrows_counterclockwise: Syncing application *{{.app.metadata.name}}*...
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
          <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|View in ArgoCD>
        slack:
          channel: deployments
      template.app-sync-status-unknown: |
        message: |
          :question: Application *{{.app.metadata.name}}* sync status is unknown.
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
          Sync Status: {{.app.status.sync.status}}
          <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|View in ArgoCD>
        slack:
          channel: deployments
      template.app-sync-succeeded: |
        message: |
          :white_check_mark: Application *{{.app.metadata.name}}* has been successfully synced.
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
          Revision: {{.app.status.sync.revision}}
          <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|View in ArgoCD>
        slack:
          channel: deployments
      template.app-rollback: |
        message: |
          :rewind: Application *{{.app.metadata.name}}* has been rolled back.
          Project: {{.app.spec.project}}
          Namespace: {{.app.spec.destination.namespace}}
          Rolled back to Revision: {{.app.status.sync.revision}}
          <https://internal.rger.dev:30080/applications/{{.app.metadata.name}}|View in ArgoCD>
        slack:
          channel: deployments
    triggers:
      trigger.on-created: |
        - when: app.metadata.creationTimestamp != nil and app.status.operationState.phase == 'Succeeded'
      trigger.on-deleted: |
        - when: app.metadata.deletionTimestamp != nil
      trigger.on-deployed: |
        - when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy' and app.status.operationState.operation == 'Sync'
      trigger.on-health-degraded: |
        - when: app.status.health.status == 'Degraded' and app.status.operationState.phase != 'Running'
      trigger.on-sync-failed: |
        - when: app.status.operationState.phase in ['Error', 'Failed']
      trigger.on-sync-running: |
        - when: app.status.operationState.phase in ['Running']
      trigger.on-sync-status-unknown: |
        - when: app.status.sync.status == 'Unknown'
      trigger.on-sync-succeeded: |
        - when: app.status.operationState.phase in ['Succeeded'] and app.status.operationState.operation == 'Sync'
      trigger.on-rollback: |
        - when: app.status.operationState.operation == 'Rollback' and app.status.operationState.phase == 'Succeeded'
      trigger.on-manual-sync: |
        - when: app.status.operationState.operation == 'Sync' and app.status.operationState.phase == 'Succeeded' and app.status.operationState.syncResult.revision != app.status.sync.revision
